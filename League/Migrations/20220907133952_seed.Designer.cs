// <auto-generated />
using System;
using League;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace League.Migrations
{
    [DbContext(typeof(UserIdentityDbContext))]
    [Migration("20220907133952_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Auth.RegisterationModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("RegisterationModel");
                });

            modelBuilder.Entity("Auth.SetRoleModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("SetRoleModel");
                });

            modelBuilder.Entity("Auth.TokenRequestModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("TokenRequestModel");
                });

            modelBuilder.Entity("Auth.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c8a9a1ae-809d-45e2-bcd6-5a2492df41cd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cfac45c7-fb33-4b51-bc14-f30458ba76fc",
                            Email = "user@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@MAIL.COM",
                            NormalizedUserName = "USER-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAEEbwZIFcX6/pPSplMrolrkYWnIHjQ74sX6kT2w6PBDVUMKrCBTGVfMPlz1B+j90joA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "90ea6e4b-3eb8-4a2a-9649-4e3078a6553f",
                            TwoFactorEnabled = false,
                            UserName = "User-name"
                        },
                        new
                        {
                            Id = "6056a156-d00d-49b4-89ed-7a20a67d68e8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c8b25b5b-67f5-43b5-b3a1-51518de077b7",
                            Email = "admin@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.COM",
                            NormalizedUserName = "ADMIN-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAEGktDHwQHsaeibvsPiZXTb/JPOe5Z3SvR5EYXJqZpRaUQNc6YJltyLpuJaEJDz4AJQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e23b862d-867b-4d39-900b-11331182191e",
                            TwoFactorEnabled = false,
                            UserName = "Admin-name"
                        });
                });

            modelBuilder.Entity("Domains.Linker.TeamPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.HasIndex("TeamId");

                    b.ToTable("TeamPlayer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("452f6332-7a2e-49d1-9d2c-c95324528712"),
                            PlayerId = new Guid("a6e67247-9627-4a05-ae3d-c80d4fdfb3f9"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("e089cf98-f99f-409c-879b-fb2bddd2cdbf"),
                            PlayerId = new Guid("8aa18562-783e-4ab7-91cf-a697cd6dd261"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("62fb97c5-7ebf-463d-a0f5-12f00e75a3ff"),
                            PlayerId = new Guid("fd483293-3066-4bcf-a474-a820b177ec90"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("ca43ef13-99a4-49d4-be21-5d82bddecb66"),
                            PlayerId = new Guid("8179e907-6910-4a0c-8183-a3e1f375e269"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("50ebecc7-e3b3-4db3-a2b7-b5ec29db62d4"),
                            PlayerId = new Guid("e0c8af6e-9db6-42dd-a7a2-9df247e88b29"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("9515e360-7f7f-4e79-9bb8-5ab2a757bb06"),
                            PlayerId = new Guid("e315a20f-e3bb-432e-bafa-b1fbfcb02c75"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("89bdffd3-c05a-4694-9228-bbcfbbf2f7b3"),
                            PlayerId = new Guid("c1b9c28d-6194-4093-8d39-28e44d5a3aac"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("373a4c2c-b4da-47a8-83fe-5020bbc5679a"),
                            PlayerId = new Guid("7ed4e691-07e5-478a-9396-d0fcba41080f"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("f54ca34d-a39c-4cf6-92f6-41d3981e0f56"),
                            PlayerId = new Guid("febf4050-ff14-4425-a362-69cbff365efb"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("3d8859a3-a6aa-45b6-9a2f-ad103587faaf"),
                            PlayerId = new Guid("8aef9d3f-36a3-4bc6-a91a-21bd92448ba3"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("c4d1d8cc-9e2e-4a96-b25a-c1a53922ccc3"),
                            PlayerId = new Guid("0c4c7ed2-9a42-445e-bae1-6e2c21ea9702"),
                            TeamId = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26")
                        },
                        new
                        {
                            Id = new Guid("5665be06-d902-40b6-98fc-df8f75514613"),
                            PlayerId = new Guid("3ad576ef-30da-43d5-8ab9-0cbbe07e48f1"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("8a7f1e95-34d8-48aa-95ff-f96638f651a7"),
                            PlayerId = new Guid("2fcbcec5-a6a3-46dc-aa19-b64ccc57fd97"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("c004a060-f36b-4cff-92a6-457e8471a505"),
                            PlayerId = new Guid("14161cc5-fa8a-4b5a-829e-53b39bd5f96f"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("81934ae3-3e60-439d-a617-dcf035bf7216"),
                            PlayerId = new Guid("f22ccec5-7698-4e4f-9494-071c9a6f080d"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("8cafbf3d-02da-4603-8e21-91533497de06"),
                            PlayerId = new Guid("2061d97e-338f-4fe6-a9f0-e16357169169"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("5b2b3d93-6a85-4578-b21e-853984ffbebe"),
                            PlayerId = new Guid("8bad3297-ce67-400a-8d6d-ab36b7278325"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("c6a1a80d-3ada-4efb-be43-eab135a8a74b"),
                            PlayerId = new Guid("0fc02f76-8e9c-4129-a020-117c4d89709b"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("adf94636-f003-4476-a6b5-2d9a9d1a7873"),
                            PlayerId = new Guid("ddf83261-73b7-46d6-8777-ff47e7673be6"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("d2cb3053-9e39-4904-a3fa-455e64b63463"),
                            PlayerId = new Guid("7319a7f7-d0dd-43ac-a516-1024b0289f4a"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("319e15ec-5f5c-47dd-aa95-21a4beaf2e15"),
                            PlayerId = new Guid("61f07810-14fe-46da-a19e-40241fcf003d"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("4b124ac3-19b4-4175-8e35-2e10c4ebe420"),
                            PlayerId = new Guid("9ddfadd1-b48c-44d0-b9dd-69e233d63b68"),
                            TeamId = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8")
                        },
                        new
                        {
                            Id = new Guid("25cab676-9cf1-4964-b1eb-6bc9bfb86af3"),
                            PlayerId = new Guid("8214ad74-9564-4b15-b70b-2dea9d0a262a"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("ddd56baa-488c-42bb-99ee-7de2202a8511"),
                            PlayerId = new Guid("d549823b-07b9-4784-82c5-a051c2f1d283"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("16b58d92-56af-47c1-9f45-b24044e5fd2b"),
                            PlayerId = new Guid("b0cab865-8eca-461f-bf24-8353a6c1b15d"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("298cc4f4-77e1-4ef6-9a7f-8778c56c70b0"),
                            PlayerId = new Guid("d3e1a894-dc6c-4116-8efa-39e1ce813e84"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("093e1c3e-fbe7-445f-8b98-63cb64b9dced"),
                            PlayerId = new Guid("7dec8e20-54af-4500-8262-ed37adb60f4b"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("dda43b1e-f19b-48a1-9dc5-bd65f88ac897"),
                            PlayerId = new Guid("af708704-33f1-4e53-b142-fd4a3cdbe1fc"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("a974dba1-cf61-4a8f-8984-b45fb1ec80af"),
                            PlayerId = new Guid("1521f22a-b2e9-41bc-a1e0-89c419945019"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("2452d543-8671-4336-afd7-6af7a021c729"),
                            PlayerId = new Guid("056c5015-3562-450b-89ca-491e1baf7002"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("8a19a891-ca0c-4a95-a0d5-9d3fafc78520"),
                            PlayerId = new Guid("b57d1442-2389-4bf9-bd3a-5fd4b01a18fa"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("55bf4b7f-4336-430d-9b40-61d5c84ab297"),
                            PlayerId = new Guid("25790383-4f35-4d9a-bd21-f71d51974e84"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        },
                        new
                        {
                            Id = new Guid("e2d1155d-f56c-453f-b42c-daf78fbc3c5e"),
                            PlayerId = new Guid("222e6af2-e6e6-4469-a3e9-93aec0f0cfa7"),
                            TeamId = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949")
                        });
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<string>("profileImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6e67247-9627-4a05-ae3d-c80d4fdfb3f9"),
                            Name = "Sierra Shaffer",
                            country = " Burundi",
                            dob = new DateTime(1992, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 78,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8aa18562-783e-4ab7-91cf-a697cd6dd261"),
                            Name = "Cameron Bell",
                            country = " Mauritius",
                            dob = new DateTime(1998, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 31,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("fd483293-3066-4bcf-a474-a820b177ec90"),
                            Name = "Philip Ramos",
                            country = " Congo DR2",
                            dob = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 6,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8179e907-6910-4a0c-8183-a3e1f375e269"),
                            Name = "Bradley Campos",
                            country = " Tunisia1",
                            dob = new DateTime(2009, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 98,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e0c8af6e-9db6-42dd-a7a2-9df247e88b29"),
                            Name = "Nadia Boyer",
                            country = " Congo",
                            dob = new DateTime(2011, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 87,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e315a20f-e3bb-432e-bafa-b1fbfcb02c75"),
                            Name = "Agustin Arias",
                            country = " Cape Verde",
                            dob = new DateTime(2025, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 98,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("c1b9c28d-6194-4093-8d39-28e44d5a3aac"),
                            Name = "Geovanni Buck",
                            country = " Liberia",
                            dob = new DateTime(1991, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 35,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("7ed4e691-07e5-478a-9396-d0fcba41080f"),
                            Name = "Francis Garrett",
                            country = " Cameroon",
                            dob = new DateTime(1993, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 77,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("febf4050-ff14-4425-a362-69cbff365efb"),
                            Name = "Kaitlyn Roberson",
                            country = " Botswana",
                            dob = new DateTime(1994, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 40,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8aef9d3f-36a3-4bc6-a91a-21bd92448ba3"),
                            Name = "Donald Frederick",
                            country = " Ghana",
                            dob = new DateTime(2006, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 75,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("0c4c7ed2-9a42-445e-bae1-6e2c21ea9702"),
                            Name = "America Parrish",
                            country = " Eritrea",
                            dob = new DateTime(2024, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 26,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("3ad576ef-30da-43d5-8ab9-0cbbe07e48f1"),
                            Name = "Francis Garrett",
                            country = " Angola",
                            dob = new DateTime(2029, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 98,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("2fcbcec5-a6a3-46dc-aa19-b64ccc57fd97"),
                            Name = "Rachael Rangel",
                            country = " South Africa",
                            dob = new DateTime(2012, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 64,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("14161cc5-fa8a-4b5a-829e-53b39bd5f96f"),
                            Name = "Sierra Shaffer",
                            country = " Nigeria",
                            dob = new DateTime(1993, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 71,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("f22ccec5-7698-4e4f-9494-071c9a6f080d"),
                            Name = "Elias Cummings",
                            country = " Nigeria",
                            dob = new DateTime(2000, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 58,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("2061d97e-338f-4fe6-a9f0-e16357169169"),
                            Name = "Bradley Campos",
                            country = " Kenya",
                            dob = new DateTime(2013, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 10,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8bad3297-ce67-400a-8d6d-ab36b7278325"),
                            Name = "Sierra Shaffer",
                            country = " Equatorial Guinea",
                            dob = new DateTime(2013, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 19,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("0fc02f76-8e9c-4129-a020-117c4d89709b"),
                            Name = "Nadia Boyer",
                            country = " Eswatini",
                            dob = new DateTime(2010, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 88,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("ddf83261-73b7-46d6-8777-ff47e7673be6"),
                            Name = "Jenna Phelps",
                            country = " Djibouti1",
                            dob = new DateTime(2010, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 11,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("7319a7f7-d0dd-43ac-a516-1024b0289f4a"),
                            Name = "Donald Frederick",
                            country = " Libya1",
                            dob = new DateTime(2015, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 54,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("61f07810-14fe-46da-a19e-40241fcf003d"),
                            Name = "Genevieve Alvarado",
                            country = " Mauritania1",
                            dob = new DateTime(1990, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 38,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("9ddfadd1-b48c-44d0-b9dd-69e233d63b68"),
                            Name = "Josue Kelly",
                            country = " Nigeria",
                            dob = new DateTime(1993, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 85,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8214ad74-9564-4b15-b70b-2dea9d0a262a"),
                            Name = "Agustin Arias",
                            country = " Ghana",
                            dob = new DateTime(1990, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 32,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("d549823b-07b9-4784-82c5-a051c2f1d283"),
                            Name = "Rachael Rangel",
                            country = " Malawi",
                            dob = new DateTime(1998, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 12,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0cab865-8eca-461f-bf24-8353a6c1b15d"),
                            Name = "Nadia Boyer",
                            country = " Gambia",
                            dob = new DateTime(1997, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 98,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("d3e1a894-dc6c-4116-8efa-39e1ce813e84"),
                            Name = "Taniya Hudson",
                            country = " Burkina Faso",
                            dob = new DateTime(2008, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 80,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("7dec8e20-54af-4500-8262-ed37adb60f4b"),
                            Name = "Mary Powers",
                            country = " Seychelles",
                            dob = new DateTime(2003, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 65,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("af708704-33f1-4e53-b142-fd4a3cdbe1fc"),
                            Name = "Rachael Rangel",
                            country = " Liberia",
                            dob = new DateTime(2016, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 40,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("1521f22a-b2e9-41bc-a1e0-89c419945019"),
                            Name = "Nadia Boyer",
                            country = " Niger",
                            dob = new DateTime(2015, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 54,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("056c5015-3562-450b-89ca-491e1baf7002"),
                            Name = "Kaitlyn Roberson",
                            country = " Benin",
                            dob = new DateTime(2009, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 62,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("b57d1442-2389-4bf9-bd3a-5fd4b01a18fa"),
                            Name = "Norah Torres",
                            country = " Malawi",
                            dob = new DateTime(2018, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 82,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("25790383-4f35-4d9a-bd21-f71d51974e84"),
                            Name = "Cameron Bell",
                            country = " Cape Verde",
                            dob = new DateTime(2013, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 77,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("222e6af2-e6e6-4469-a3e9-93aec0f0cfa7"),
                            Name = "Alexis Stuart",
                            country = " Nigeria",
                            dob = new DateTime(2013, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 51,
                            profileImage = "defausl.jpg"
                        });
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("coatch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("foundatoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b7bc5b3-3914-47dc-8d83-1de3e437ff26"),
                            Name = "Kaitlyn Roberson",
                            coatch = "Amari Riddle",
                            country = " Ethiopia",
                            foundatoinDate = new DateTime(2027, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("c9c42417-de22-469b-ba1e-11179ecb26a8"),
                            Name = "Urijah Ali",
                            coatch = "Cameron Bell",
                            country = " Burundi",
                            foundatoinDate = new DateTime(1999, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("cea8a9ef-ca97-4901-9cbf-84eb88949949"),
                            Name = "Taniya Hudson",
                            coatch = "Madden Henson",
                            country = " Gambia",
                            foundatoinDate = new DateTime(2013, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2fe8284b-b2f9-4615-85b9-2db38fbd0ce7",
                            ConcurrencyStamp = "5a71a0df-6486-4410-993a-939988b8e4f6",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "94316ed8-e8fd-44dc-9e9a-a14eab919615",
                            ConcurrencyStamp = "c671014f-8a7a-48e2-a7c3-1aaec1a30f65",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "6056a156-d00d-49b4-89ed-7a20a67d68e8",
                            RoleId = "94316ed8-e8fd-44dc-9e9a-a14eab919615"
                        },
                        new
                        {
                            UserId = "6056a156-d00d-49b4-89ed-7a20a67d68e8",
                            RoleId = "2fe8284b-b2f9-4615-85b9-2db38fbd0ce7"
                        },
                        new
                        {
                            UserId = "c8a9a1ae-809d-45e2-bcd6-5a2492df41cd",
                            RoleId = "2fe8284b-b2f9-4615-85b9-2db38fbd0ce7"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domains.Linker.TeamPlayer", b =>
                {
                    b.HasOne("Domains.Player.Player", null)
                        .WithOne("Team")
                        .HasForeignKey("Domains.Linker.TeamPlayer", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domains.Team.Team", null)
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
