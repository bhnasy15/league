// <auto-generated />
using System;
using League;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace League.Migrations
{
    [DbContext(typeof(UserIdentityDbContext))]
    [Migration("20220907173651_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Auth.RegisterationModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("RegisterationModel");
                });

            modelBuilder.Entity("Auth.SetRoleModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("SetRoleModel");
                });

            modelBuilder.Entity("Auth.TokenRequestModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("TokenRequestModel");
                });

            modelBuilder.Entity("Auth.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "58fd374a-9547-4eaa-af66-d9295fdac4bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1c1502e-ef31-4bc9-8c74-07161fe94d62",
                            Email = "user@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@MAIL.COM",
                            NormalizedUserName = "USER-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAEOWxnUYJQXPfTcJ7J2mNeuZRkU91IU3aNA5YUp9n/KC6itx+aitGYWXVWe/mXA7Y4w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2931039a-9080-4db2-a7af-64557f9b1eee",
                            TwoFactorEnabled = false,
                            UserName = "User-name"
                        },
                        new
                        {
                            Id = "d14f686b-1fc9-4587-899e-bdc7e10a883b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "12ed077a-4ac0-4e29-b61f-84ac144a6bd4",
                            Email = "admin@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.COM",
                            NormalizedUserName = "ADMIN-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAED1R6DILjoj1CX253wPZfHrVijU6GKBLpUWfij7zQwOaj8eGjrlMy7DG45VZiPYRog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d68773bb-088a-49c4-af2a-8ecf2bf4b61a",
                            TwoFactorEnabled = false,
                            UserName = "Admin-name"
                        });
                });

            modelBuilder.Entity("Domains.Linker.TeamPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.HasIndex("TeamId");

                    b.ToTable("TeamPlayer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ea21d2e-dd06-4ea4-8c7f-d27eb9e08333"),
                            PlayerId = new Guid("0438a053-5ec4-49e8-a466-ccc783e82b4a"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("7758d267-48da-4d4d-b462-da8eaf3e780e"),
                            PlayerId = new Guid("d515e7c2-ef90-4ee0-9cb8-c410b07aba6b"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("4af46ce2-4eee-47df-b158-3e11cff9353c"),
                            PlayerId = new Guid("e64fde75-1388-41c7-9dd9-334dbd8e4b36"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("4ce0b163-b651-4c45-84a5-5db3147e007a"),
                            PlayerId = new Guid("6726b5ab-ce06-446f-a195-800d4727a5fe"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("4fd916a5-405a-40a9-bdb2-835e8de62933"),
                            PlayerId = new Guid("b773b589-92fc-4011-8382-6d33d52da914"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("3791c234-14db-410b-bd2d-2c77106297e8"),
                            PlayerId = new Guid("ef583876-0fd6-473c-9619-a407109b92d0"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("1bfe6655-d83e-4f5d-93d6-f20d4e52ed2e"),
                            PlayerId = new Guid("7c1a389c-d1f5-44b8-9d18-3d06e7186100"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("ca79fda0-f72b-45c3-87a6-88beb8ffe013"),
                            PlayerId = new Guid("20146fa7-a20b-445b-8ffc-f4502232c43a"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("f7a4add3-5df7-4052-9650-e894d5f54920"),
                            PlayerId = new Guid("033b3e4d-6bcf-44ca-a39b-f3b43eb52bda"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("a8f71d7e-e2fc-4424-90fb-c0906a8e6193"),
                            PlayerId = new Guid("3a6e45e4-4dc0-48fd-91b4-f7508642c7a8"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("59e15bf8-5188-4706-b602-1aa710ef9d94"),
                            PlayerId = new Guid("f81fb768-80ed-4475-a9bc-0bc9e65b0477"),
                            TeamId = new Guid("44665309-03d6-461c-b322-7964f75cedd0")
                        },
                        new
                        {
                            Id = new Guid("c186eaff-d533-44d6-ba15-37b7d37b5e83"),
                            PlayerId = new Guid("955434c7-a479-49f6-ad5e-706fcea6b506"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("6cf2d5f4-5911-4161-95fe-e8018992ef18"),
                            PlayerId = new Guid("285f01b4-5628-4d86-8c17-b8e21b651122"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("95298ac7-d8dc-4234-accf-114c0b397e9e"),
                            PlayerId = new Guid("8985de20-c3b0-44fd-b4ae-38bc9e0fef19"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("e35608ce-b696-419a-ab4a-a9dcf5d8114c"),
                            PlayerId = new Guid("0d2c6043-c3f2-4f42-bf93-a115e4fc9298"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("3dab0c68-9ed7-4cb3-9cbe-16766e26ec3c"),
                            PlayerId = new Guid("2a4e7601-70ce-4109-9732-dd1c7ae29150"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("33636c64-7cf9-461e-bf84-738b457c9e9a"),
                            PlayerId = new Guid("9fb7900e-bab0-4225-9ed9-e2521d73f02a"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("df627692-e41c-4bcb-9588-c8f5e79d2526"),
                            PlayerId = new Guid("966cf1f1-900a-4329-9490-9822b4388d55"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("8c4b5f94-6b5b-4eb2-925b-c1cf4ae31cf0"),
                            PlayerId = new Guid("aaba9cb7-64ec-438c-98e5-954fdbf73e3b"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("d1aae722-3ffe-4637-87f7-cb503fe7bb50"),
                            PlayerId = new Guid("953f3442-aab2-4d98-bdc6-8a63b1b5b23c"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("80b9b124-f36c-445f-8e1c-c0d9c5991b5f"),
                            PlayerId = new Guid("f0df670d-69c7-41dd-b137-65e45c4847b3"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("608b6803-5050-4087-ad30-b61f8efaecea"),
                            PlayerId = new Guid("047ac3b6-e5fd-4976-9eed-0e7489b9a179"),
                            TeamId = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7")
                        },
                        new
                        {
                            Id = new Guid("506dbf35-15a4-48bf-a08f-8ec098f7e63c"),
                            PlayerId = new Guid("8ed88691-c5e0-4a13-b196-8426e8a8f3d0"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("b7633c3a-4348-4bbd-8cdd-7deee97cd750"),
                            PlayerId = new Guid("f83e95a0-b1d7-4473-aa77-4163d0a0ab44"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("da4e932c-94e1-48b5-9d07-8e950216a9fb"),
                            PlayerId = new Guid("09608c1a-41fd-4c10-bf54-9168f4d8e26f"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("19e680b5-1514-44fc-a11c-9d39ffe7de58"),
                            PlayerId = new Guid("a6e0a3c2-f6b5-4670-8f00-7502d8b3076c"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("b650282e-b676-4b74-bb25-a461a74bce6e"),
                            PlayerId = new Guid("bd457779-dbb1-4453-9899-de3cc113c90a"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("51e2314b-2853-4644-ab67-7da23907f6e7"),
                            PlayerId = new Guid("8bae93c9-c1aa-4777-84e6-945c4ceb8a8b"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("ade6484b-a672-4995-9f46-ebf415864623"),
                            PlayerId = new Guid("6a4c58d1-fbb4-458a-8075-2ba414117547"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("14e0172c-98d5-473e-98ac-f82d2a9a361c"),
                            PlayerId = new Guid("9e9c4928-84f8-47ba-b596-f7ddbf16ae5d"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("51e3de0f-f21e-4d43-bb2c-899f7d299c07"),
                            PlayerId = new Guid("64b1bcd5-8ab9-4eb3-a368-535861868b75"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("d6960aaa-13cc-4fe7-bd1c-79c7fc384399"),
                            PlayerId = new Guid("6e017a3e-5fb3-4a72-a073-282b9234b1f1"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        },
                        new
                        {
                            Id = new Guid("121e18bd-6008-4f8f-82ff-aded2c226fd6"),
                            PlayerId = new Guid("8b2033a0-2818-4d47-a895-b859a32acfab"),
                            TeamId = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886")
                        });
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<string>("profileImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0438a053-5ec4-49e8-a466-ccc783e82b4a"),
                            Name = "Messiah Flores",
                            country = " Somalia1",
                            dob = new DateTime(1990, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 31,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("d515e7c2-ef90-4ee0-9cb8-c410b07aba6b"),
                            Name = "Madelynn Tapia",
                            country = " Mozambique",
                            dob = new DateTime(2022, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 95,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e64fde75-1388-41c7-9dd9-334dbd8e4b36"),
                            Name = "Josue Kelly",
                            country = " Liberia",
                            dob = new DateTime(2002, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 97,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("6726b5ab-ce06-446f-a195-800d4727a5fe"),
                            Name = "Jenna Phelps",
                            country = " Kenya",
                            dob = new DateTime(2009, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 3,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("b773b589-92fc-4011-8382-6d33d52da914"),
                            Name = "Alexis Stuart",
                            country = " Guinea",
                            dob = new DateTime(2029, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 33,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("ef583876-0fd6-473c-9619-a407109b92d0"),
                            Name = "Rosa Bentley",
                            country = " Namibia",
                            dob = new DateTime(2000, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 86,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("7c1a389c-d1f5-44b8-9d18-3d06e7186100"),
                            Name = "Genevieve Alvarado",
                            country = " Nigeria",
                            dob = new DateTime(2006, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 58,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("20146fa7-a20b-445b-8ffc-f4502232c43a"),
                            Name = "Mary Powers",
                            country = " Somalia1",
                            dob = new DateTime(2029, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 5,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("033b3e4d-6bcf-44ca-a39b-f3b43eb52bda"),
                            Name = "Amari Riddle",
                            country = " Benin",
                            dob = new DateTime(1999, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 17,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("3a6e45e4-4dc0-48fd-91b4-f7508642c7a8"),
                            Name = "Brandon Crawford",
                            country = " Zambia",
                            dob = new DateTime(2021, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 44,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("f81fb768-80ed-4475-a9bc-0bc9e65b0477"),
                            Name = "Jayden Barajas",
                            country = " Mauritius",
                            dob = new DateTime(1996, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 50,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("955434c7-a479-49f6-ad5e-706fcea6b506"),
                            Name = "Genevieve Alvarado",
                            country = " Benin",
                            dob = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 54,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("285f01b4-5628-4d86-8c17-b8e21b651122"),
                            Name = "Sierra Shaffer",
                            country = " Senegal",
                            dob = new DateTime(2023, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 1,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8985de20-c3b0-44fd-b4ae-38bc9e0fef19"),
                            Name = "Terrence Navarro",
                            country = " Guinea",
                            dob = new DateTime(2029, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 82,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("0d2c6043-c3f2-4f42-bf93-a115e4fc9298"),
                            Name = "Nayeli Hoover",
                            country = " Mozambique",
                            dob = new DateTime(2007, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 11,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("2a4e7601-70ce-4109-9732-dd1c7ae29150"),
                            Name = "Donald Frederick",
                            country = " Zambia",
                            dob = new DateTime(2012, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 68,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("9fb7900e-bab0-4225-9ed9-e2521d73f02a"),
                            Name = "Josue Kelly",
                            country = " Angola",
                            dob = new DateTime(1991, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 47,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("966cf1f1-900a-4329-9490-9822b4388d55"),
                            Name = "Tara Singh",
                            country = " Côte d'Ivoire",
                            dob = new DateTime(2007, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 81,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("aaba9cb7-64ec-438c-98e5-954fdbf73e3b"),
                            Name = "Ronnie Morse",
                            country = " Zimbabwe",
                            dob = new DateTime(2022, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 4,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("953f3442-aab2-4d98-bdc6-8a63b1b5b23c"),
                            Name = "Josue Kelly",
                            country = " Uganda",
                            dob = new DateTime(1992, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 5,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("f0df670d-69c7-41dd-b137-65e45c4847b3"),
                            Name = "Javion Shaffer",
                            country = " Senegal",
                            dob = new DateTime(2025, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 76,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("047ac3b6-e5fd-4976-9eed-0e7489b9a179"),
                            Name = "Tara Singh",
                            country = " Comoros1",
                            dob = new DateTime(2000, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 15,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8ed88691-c5e0-4a13-b196-8426e8a8f3d0"),
                            Name = "Tara Singh",
                            country = " Zimbabwe",
                            dob = new DateTime(2006, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 48,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("f83e95a0-b1d7-4473-aa77-4163d0a0ab44"),
                            Name = "Rachael Rangel",
                            country = " Togo",
                            dob = new DateTime(2005, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 52,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("09608c1a-41fd-4c10-bf54-9168f4d8e26f"),
                            Name = "Jenna Phelps",
                            country = " Burundi",
                            dob = new DateTime(2009, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 99,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("a6e0a3c2-f6b5-4670-8f00-7502d8b3076c"),
                            Name = "Julius Jacobson",
                            country = " Congo",
                            dob = new DateTime(2016, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 1,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("bd457779-dbb1-4453-9899-de3cc113c90a"),
                            Name = "Mckenna Wallace",
                            country = " Lesotho",
                            dob = new DateTime(2016, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 4,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8bae93c9-c1aa-4777-84e6-945c4ceb8a8b"),
                            Name = "Geovanni Buck",
                            country = " Comoros1",
                            dob = new DateTime(1991, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 27,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("6a4c58d1-fbb4-458a-8075-2ba414117547"),
                            Name = "Tara Singh",
                            country = " Niger",
                            dob = new DateTime(1992, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 78,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("9e9c4928-84f8-47ba-b596-f7ddbf16ae5d"),
                            Name = "Madden Henson",
                            country = " Congo DR2",
                            dob = new DateTime(1995, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 81,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("64b1bcd5-8ab9-4eb3-a368-535861868b75"),
                            Name = "Mary Powers",
                            country = " Réunion3",
                            dob = new DateTime(2004, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 27,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("6e017a3e-5fb3-4a72-a073-282b9234b1f1"),
                            Name = "Nayeli Hoover",
                            country = " Namibia",
                            dob = new DateTime(2009, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 63,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("8b2033a0-2818-4d47-a895-b859a32acfab"),
                            Name = "Bradley Campos",
                            country = " Mali",
                            dob = new DateTime(2029, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 21,
                            profileImage = "defausl.jpg"
                        });
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("coatch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("foundatoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44665309-03d6-461c-b322-7964f75cedd0"),
                            Name = "Jazmin Schwartz",
                            coatch = "Bradley Campos",
                            country = " Botswana",
                            foundatoinDate = new DateTime(2027, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("ca14dbb4-c145-49ec-a3bd-4ab91b41ece7"),
                            Name = "Kaylee Guerra",
                            coatch = "Madelynn Tapia",
                            country = " Congo",
                            foundatoinDate = new DateTime(2006, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("a3cf8d44-2948-4db8-ac86-a609d8fbf886"),
                            Name = "Tara Singh",
                            coatch = "Cassie Combs",
                            country = " Nigeria",
                            foundatoinDate = new DateTime(1999, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ec29a43e-ca00-41ad-a830-59e7bc99f252",
                            ConcurrencyStamp = "1419d974-450f-4dbe-a799-0902222a2d06",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "f74b13a4-0178-4200-8783-6a5103329281",
                            ConcurrencyStamp = "d9a5cf58-2ea5-46dd-92bc-df2545d46e2b",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "d14f686b-1fc9-4587-899e-bdc7e10a883b",
                            RoleId = "f74b13a4-0178-4200-8783-6a5103329281"
                        },
                        new
                        {
                            UserId = "58fd374a-9547-4eaa-af66-d9295fdac4bd",
                            RoleId = "ec29a43e-ca00-41ad-a830-59e7bc99f252"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domains.Linker.TeamPlayer", b =>
                {
                    b.HasOne("Domains.Player.Player", null)
                        .WithOne("Team")
                        .HasForeignKey("Domains.Linker.TeamPlayer", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domains.Team.Team", null)
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
