// <auto-generated />
using System;
using League;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace League.Migrations
{
    [DbContext(typeof(UserIdentityDbContext))]
    [Migration("20220906213519_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Auth.RegisterationModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("RegisterationModel");
                });

            modelBuilder.Entity("Auth.SetRoleModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("SetRoleModel");
                });

            modelBuilder.Entity("Auth.TokenRequestModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("TokenRequestModel");
                });

            modelBuilder.Entity("Auth.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "73d4f91b-e124-4859-b501-2f9feb3f2f9f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7f14fab6-6af4-4143-b223-7d76a66cdc4e",
                            Email = "user@mail.xyz",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@MAIL.XYZ",
                            NormalizedUserName = "USER-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAED00w2GzAUUOCxyhz/bsQODU+0oS5WgGm8TNNIq/Woo/a/tjh5f+W4fGfee+n86ESA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "91dbaaff-be93-447a-8088-bd91759bf776",
                            TwoFactorEnabled = false,
                            UserName = "User-name"
                        },
                        new
                        {
                            Id = "bc3b73d3-3f25-4414-bace-3fef258dbb5a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0b8de385-e027-4089-a8b3-214e796e5057",
                            Email = "admin@mail.xyz",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.XYZ",
                            NormalizedUserName = "ADMIN-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAEKb2h6rJNcXhKxBz3jinn498QxMC8O1j4LgcG6tD7FhmChbAna+RTl/0aUahWKJgwQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0e9d2a8f-b321-47b4-beb0-5c34c4a1a438",
                            TwoFactorEnabled = false,
                            UserName = "Admin-name"
                        });
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("char(36)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<string>("profileImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a288631-0c77-46ad-bca7-830ee156f1e2"),
                            Name = "Elias Cummings",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Zimbabwe",
                            dob = new DateTime(2007, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 89,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e9a3d811-a049-4128-9c19-b34de1f9ef0b"),
                            Name = "Julius Jacobson",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Eswatini",
                            dob = new DateTime(2029, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 73,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("dfc5c104-fa5e-450b-ba26-fd006c7ac16b"),
                            Name = "Miles Jimenez",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " São Tomé and Príncipe",
                            dob = new DateTime(2017, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 92,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("2b97df2a-d481-4140-afbb-4cd53e87e00d"),
                            Name = "Elias Cummings",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Eswatini",
                            dob = new DateTime(2009, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 0,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("25c6c96a-01e9-4e06-8700-b76ac8813c40"),
                            Name = "Kaya Odonnell",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Somalia1",
                            dob = new DateTime(2016, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 8,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("4c25a056-8e8d-4f28-b6f0-08444c458ce3"),
                            Name = "Kaitlyn Roberson",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Ethiopia",
                            dob = new DateTime(2026, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 25,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("32d501f0-80c4-450e-a755-2a24fb30e640"),
                            Name = "Alexis Stuart",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Egypt1",
                            dob = new DateTime(2009, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 75,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e555b30a-28ad-4647-a6ac-186bbfdddacf"),
                            Name = "Gerardo Spencer",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Morocco1",
                            dob = new DateTime(2019, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 86,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("2511c1e2-ad68-4692-b80f-2ba53be22366"),
                            Name = "Brandon Crawford",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Mali",
                            dob = new DateTime(2015, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 40,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("13e98150-0e45-4ec3-bb64-aa0c1aba0fb4"),
                            Name = "Julius Jacobson",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " South Sudan",
                            dob = new DateTime(2012, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 58,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("d8d91fc1-d533-454d-ab8c-f97697ceeac0"),
                            Name = "Ronnie Morse",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Senegal",
                            dob = new DateTime(2010, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 26,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e2baf573-3b8e-4cfb-b027-47c9cdeb916d"),
                            Name = "Messiah Flores",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Comoros1",
                            dob = new DateTime(1995, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 97,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("87d9fa5e-ee3f-46a7-8b9b-56ada805e0ff"),
                            Name = "Josue Kelly",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Djibouti1",
                            dob = new DateTime(2026, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 59,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("f3629775-4ba4-4494-b1aa-5dbec52d607b"),
                            Name = "Nayeli Hoover",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Seychelles",
                            dob = new DateTime(1997, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 42,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("1a70f71e-c056-4574-8385-287caaf64344"),
                            Name = "Madden Henson",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " São Tomé and Príncipe",
                            dob = new DateTime(2025, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 4,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("b8861eef-9d1a-4e0f-8251-4df53fd65c22"),
                            Name = "Kaiden Young",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Mali",
                            dob = new DateTime(1991, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 59,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("0ce337f1-7196-4006-8d4c-cfcde6c951b8"),
                            Name = "Geovanni Buck",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Senegal",
                            dob = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 31,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("5f13a9ff-5900-41c7-a567-e4958c83ae0a"),
                            Name = "Gerardo Spencer",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Gabon",
                            dob = new DateTime(2011, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 65,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("58c5526a-7353-498f-a838-56797f2c42ad"),
                            Name = "Sierra Shaffer",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Libya1",
                            dob = new DateTime(1999, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 16,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("bb2f5cc1-08e2-4d27-8899-c441dae7d2ae"),
                            Name = "Chaz Stuart",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Mauritania1",
                            dob = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 72,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("728576e9-e1a9-4371-8868-7740dcd03fd0"),
                            Name = "Francis Garrett",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Niger",
                            dob = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 45,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("c0026795-40c1-4d48-9658-434c023b3b76"),
                            Name = "Jenna Phelps",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Guinea-Bissau",
                            dob = new DateTime(2002, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 4,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("92b91252-130a-478d-8a18-24a03a0b4964"),
                            Name = "Jayden Barajas",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Burkina Faso",
                            dob = new DateTime(2019, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 15,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("729052de-6a2e-411a-87f6-06134eda2977"),
                            Name = "Taniya Hudson",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Madagascar",
                            dob = new DateTime(2005, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 67,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("0f068910-5c16-4e28-b6a6-bde1b87697ba"),
                            Name = "Jazmin Schwartz",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Mauritania1",
                            dob = new DateTime(1995, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 68,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("6be0b620-0e61-42e6-8838-2a17055c6edc"),
                            Name = "Clay Sexton",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Mauritius",
                            dob = new DateTime(2011, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 87,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("2049d33c-2f3d-44f1-ac36-0c20c85116e6"),
                            Name = "Rosa Bentley",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " South Sudan",
                            dob = new DateTime(2026, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 72,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("6523c7ce-2435-4251-833c-9f1ad25f611e"),
                            Name = "Tara Singh",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Réunion3",
                            dob = new DateTime(2011, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 53,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("940ce9ff-a97e-4c94-9b2d-925aa90c6ac2"),
                            Name = "Brandon Crawford",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Congo",
                            dob = new DateTime(2021, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 29,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("b1f8c875-5c86-4c9c-a27d-cf298dab290b"),
                            Name = "Mckenna Wallace",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Eswatini",
                            dob = new DateTime(1993, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 0,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("58d414f5-960f-4b8e-b461-4cbf4628f4ab"),
                            Name = "Jenna Phelps",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Cape Verde",
                            dob = new DateTime(2018, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 9,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("acd9e19d-cae0-4884-b7ed-7f0119726aee"),
                            Name = "Brandon Crawford",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Gabon",
                            dob = new DateTime(2006, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 55,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("41b992f5-436d-47e2-addf-c623105b425b"),
                            Name = "Ansley Knight",
                            TeamId = new Guid("00000000-0000-0000-0000-000000000000"),
                            country = " Madagascar",
                            dob = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 54,
                            profileImage = "defausl.jpg"
                        });
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("coatch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("foundatoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("719156db-cf15-4630-9616-a2236828b471"),
                            Name = "Philippines",
                            coatch = "Jordan",
                            country = " Uganda",
                            foundatoinDate = new DateTime(2016, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("f91733d7-8581-4784-8175-1f2ee237786a"),
                            Name = "Guam",
                            coatch = "Bhutan",
                            country = " Mozambique",
                            foundatoinDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("7531d7c8-d544-413c-b5a7-ce8a548efea5"),
                            Name = "Jordan",
                            coatch = "Laos",
                            country = " South Africa",
                            foundatoinDate = new DateTime(2001, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "36a9cc46-246f-4be2-a26b-4613a14ea88b",
                            ConcurrencyStamp = "6e67a81b-7cd0-4f29-bb14-f6451530bac8",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "69af0914-f9d7-419f-9bca-d62e497d5d07",
                            ConcurrencyStamp = "c5e76094-54f3-45c1-9852-4863e4db9ece",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "bc3b73d3-3f25-4414-bace-3fef258dbb5a",
                            RoleId = "69af0914-f9d7-419f-9bca-d62e497d5d07"
                        },
                        new
                        {
                            UserId = "73d4f91b-e124-4859-b501-2f9feb3f2f9f",
                            RoleId = "36a9cc46-246f-4be2-a26b-4613a14ea88b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.HasOne("Domains.Team.Team", null)
                        .WithMany("players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Navigation("players");
                });
#pragma warning restore 612, 618
        }
    }
}
