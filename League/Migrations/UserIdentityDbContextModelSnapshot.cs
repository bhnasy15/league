// <auto-generated />
using System;
using League;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace League.Migrations
{
    [DbContext(typeof(UserIdentityDbContext))]
    partial class UserIdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Auth.RegisterationModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("RegisterationModel");
                });

            modelBuilder.Entity("Auth.SetRoleModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("SetRoleModel");
                });

            modelBuilder.Entity("Auth.TokenRequestModel", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("TokenRequestModel");
                });

            modelBuilder.Entity("Auth.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b2e1e05b-e152-4e6b-9fea-a5874e86792d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "31e9970c-5070-4f74-a037-d9e6cf6c9bef",
                            Email = "user@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@MAIL.COM",
                            NormalizedUserName = "USER-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAEN0DHQN9D1hxacsMi++SlJXovBT9f7zO49jKFPRRtXFXhPqQmLDEJY7pCC8UsGVZOw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ce4273d3-c40f-499e-b67a-da03d5b79a48",
                            TwoFactorEnabled = false,
                            UserName = "User-name"
                        },
                        new
                        {
                            Id = "a1a6aabf-9f5b-447d-b4ba-377a6fd3843e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5573bb84-0143-4f93-9f09-6c12ad7731ca",
                            Email = "admin@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.COM",
                            NormalizedUserName = "ADMIN-NAME",
                            PasswordHash = "AQAAAAEAACcQAAAAECNOsAr6QLR0TsL9PlvUBicowJVyvoGXLDU/1d5dFRoI6pjXMMVrgp9Cy7LjS1MmKg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8e74b73b-c5b8-4426-aac4-68c542b02a04",
                            TwoFactorEnabled = false,
                            UserName = "Admin-name"
                        });
                });

            modelBuilder.Entity("Domains.Linker.PlayerTeam", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("char(36)");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("PlayerTeam");

                    b.HasData(
                        new
                        {
                            PlayerId = new Guid("79fd9104-fe4d-46ae-9507-e68389ad5496"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("b1a89664-c109-4794-9d9c-2d50e568141e"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("ac981e48-32cc-40a0-98d8-87bec08ccc2d"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("61b3f62c-58b5-4009-a1c3-b28304a0ae58"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("64451079-d569-4da4-bf5e-92a11750a453"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("ac687c89-5191-4ad0-9384-bc80cfbdf492"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("f8135fd6-0566-4481-b2d3-91a299b926d5"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("a86e4fa9-26bf-411d-b33f-0eb4dc124560"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("a42a9e6c-53b7-498c-9813-ff446c35b35a"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("3cbfed23-4f91-4ce1-96bd-3cb852dd1260"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("e3ae6962-b5c9-4b8d-9a3a-aaa4eeebb120"),
                            TeamId = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02")
                        },
                        new
                        {
                            PlayerId = new Guid("765b92d4-fc9b-4753-926f-4a0481bf54d6"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("9be85e40-fb6e-470e-b1fc-e91dedfce251"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("c3552ef3-cf23-4377-88cb-5a36bbbbfef7"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("2e5fa678-95ac-48b8-851f-a16d163bd3b7"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("80bf7cc8-5716-45bb-a2bb-fb9e7529cc82"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("a19653d8-71dd-470e-b94b-85125522ada8"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("52071bdd-d192-4836-974c-8b0e3cfcb439"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("30e4137b-a9ce-4faa-b9d1-c4ceb6891f25"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("cf5baa22-2e81-4714-a694-877ae864c37d"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("086d6d6f-d3ff-4e78-abd9-aee1d75a361c"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("6b250e60-f315-4610-ba2d-eaed835d0497"),
                            TeamId = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080")
                        },
                        new
                        {
                            PlayerId = new Guid("db2bf779-aa03-4e8d-a6c9-65e4a9901175"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("fa0aed89-3a11-49e4-b94c-c69fc200738a"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("b0c02032-db80-4a25-8fbe-ed108dc21590"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("64a7f7ba-e494-44ed-88b4-f566da496b0b"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("32f294b4-57e3-4f58-bb10-5a8d9844f68e"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("1d1c1469-79a7-4f33-bf8a-adf71bf8c32b"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("cd67c983-1252-44c9-8005-e28141002d89"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("3ae54e9e-339f-4c42-8728-90c9c7f79c0d"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("34b1bf97-d1d0-47cd-9b59-1f378aed2f25"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("e2aa0675-ae9e-4ecc-ac15-5a5191acf3d0"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        },
                        new
                        {
                            PlayerId = new Guid("1b925330-09f7-4742-b41e-d56950b71171"),
                            TeamId = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5")
                        });
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<string>("profileImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79fd9104-fe4d-46ae-9507-e68389ad5496"),
                            Name = "Kaya Odonnell",
                            country = " Kenya",
                            dob = new DateTime(2015, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 62,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("b1a89664-c109-4794-9d9c-2d50e568141e"),
                            Name = "Brandon Crawford",
                            country = " Lesotho",
                            dob = new DateTime(1996, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 60,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("ac981e48-32cc-40a0-98d8-87bec08ccc2d"),
                            Name = "Kaya Odonnell",
                            country = " Burundi",
                            dob = new DateTime(2019, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 37,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("61b3f62c-58b5-4009-a1c3-b28304a0ae58"),
                            Name = "Madden Henson",
                            country = " Libya1",
                            dob = new DateTime(1998, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 82,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("64451079-d569-4da4-bf5e-92a11750a453"),
                            Name = "Cameron Bell",
                            country = " Guinea-Bissau",
                            dob = new DateTime(2006, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 91,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("ac687c89-5191-4ad0-9384-bc80cfbdf492"),
                            Name = "Donald Frederick",
                            country = " Tanzania",
                            dob = new DateTime(2018, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 54,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("f8135fd6-0566-4481-b2d3-91a299b926d5"),
                            Name = "Geovanni Buck",
                            country = " Libya1",
                            dob = new DateTime(2008, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 66,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("a86e4fa9-26bf-411d-b33f-0eb4dc124560"),
                            Name = "Brandon Crawford",
                            country = " Eswatini",
                            dob = new DateTime(1990, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 19,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("a42a9e6c-53b7-498c-9813-ff446c35b35a"),
                            Name = "Kaiden Young",
                            country = " Angola",
                            dob = new DateTime(2027, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 94,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("3cbfed23-4f91-4ce1-96bd-3cb852dd1260"),
                            Name = "Tara Singh",
                            country = " Liberia",
                            dob = new DateTime(2029, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 14,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e3ae6962-b5c9-4b8d-9a3a-aaa4eeebb120"),
                            Name = "Nayeli Hoover",
                            country = " Niger",
                            dob = new DateTime(2019, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 92,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("765b92d4-fc9b-4753-926f-4a0481bf54d6"),
                            Name = "Stella Avila",
                            country = " Libya1",
                            dob = new DateTime(2001, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 4,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("9be85e40-fb6e-470e-b1fc-e91dedfce251"),
                            Name = "Urijah Ali",
                            country = " Sierra Leone",
                            dob = new DateTime(2020, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 55,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("c3552ef3-cf23-4377-88cb-5a36bbbbfef7"),
                            Name = "Clay Sexton",
                            country = " Somalia1",
                            dob = new DateTime(2018, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 54,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("2e5fa678-95ac-48b8-851f-a16d163bd3b7"),
                            Name = "Rosa Bentley",
                            country = " Equatorial Guinea",
                            dob = new DateTime(1993, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 67,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("80bf7cc8-5716-45bb-a2bb-fb9e7529cc82"),
                            Name = "Alexis Stuart",
                            country = " Seychelles",
                            dob = new DateTime(2013, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 45,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("a19653d8-71dd-470e-b94b-85125522ada8"),
                            Name = "Elias Cummings",
                            country = " Réunion3",
                            dob = new DateTime(2026, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 94,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("52071bdd-d192-4836-974c-8b0e3cfcb439"),
                            Name = "Cassie Combs",
                            country = " Comoros1",
                            dob = new DateTime(1992, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 84,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("30e4137b-a9ce-4faa-b9d1-c4ceb6891f25"),
                            Name = "Sierra Shaffer",
                            country = " Eswatini",
                            dob = new DateTime(2011, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 44,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("cf5baa22-2e81-4714-a694-877ae864c37d"),
                            Name = "Gerardo Spencer",
                            country = " South Africa",
                            dob = new DateTime(2001, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 32,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("086d6d6f-d3ff-4e78-abd9-aee1d75a361c"),
                            Name = "Taniya Hudson",
                            country = " Niger",
                            dob = new DateTime(1998, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 22,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("6b250e60-f315-4610-ba2d-eaed835d0497"),
                            Name = "Bradley Campos",
                            country = " Côte d'Ivoire",
                            dob = new DateTime(2025, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 56,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("db2bf779-aa03-4e8d-a6c9-65e4a9901175"),
                            Name = "Mckenna Wallace",
                            country = " Réunion3",
                            dob = new DateTime(2000, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 50,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("fa0aed89-3a11-49e4-b94c-c69fc200738a"),
                            Name = "Kaitlyn Roberson",
                            country = " Djibouti1",
                            dob = new DateTime(1991, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 86,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0c02032-db80-4a25-8fbe-ed108dc21590"),
                            Name = "Elias Cummings",
                            country = " Nigeria",
                            dob = new DateTime(2001, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 84,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("64a7f7ba-e494-44ed-88b4-f566da496b0b"),
                            Name = "Mckenna Wallace",
                            country = " Ghana",
                            dob = new DateTime(2000, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 65,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("32f294b4-57e3-4f58-bb10-5a8d9844f68e"),
                            Name = "Norah Torres",
                            country = " Mauritania1",
                            dob = new DateTime(2001, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 24,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("1d1c1469-79a7-4f33-bf8a-adf71bf8c32b"),
                            Name = "Sierra Shaffer",
                            country = " Eritrea",
                            dob = new DateTime(2005, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 50,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("cd67c983-1252-44c9-8005-e28141002d89"),
                            Name = "Cameron Bell",
                            country = " Malawi",
                            dob = new DateTime(2000, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 77,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("3ae54e9e-339f-4c42-8728-90c9c7f79c0d"),
                            Name = "Rachael Rangel",
                            country = " Malawi",
                            dob = new DateTime(1997, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 40,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("34b1bf97-d1d0-47cd-9b59-1f378aed2f25"),
                            Name = "Nadia Boyer",
                            country = " Cameroon",
                            dob = new DateTime(1996, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 62,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("e2aa0675-ae9e-4ecc-ac15-5a5191acf3d0"),
                            Name = "Messiah Flores",
                            country = " Congo",
                            dob = new DateTime(2028, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 98,
                            profileImage = "defausl.jpg"
                        },
                        new
                        {
                            Id = new Guid("1b925330-09f7-4742-b41e-d56950b71171"),
                            Name = "Kaitlyn Roberson",
                            country = " Libya1",
                            dob = new DateTime(2026, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            number = 26,
                            profileImage = "defausl.jpg"
                        });
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("coatch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("foundatoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("908e7ba6-c44a-45e8-b7a0-83cd1f772f02"),
                            Name = "Javion Shaffer",
                            coatch = "Bradley Campos",
                            country = " Eswatini",
                            foundatoinDate = new DateTime(1993, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("ef768f66-8c19-4e7c-8f4b-8fb828658080"),
                            Name = "Rosa Bentley",
                            coatch = "Jenna Phelps",
                            country = " Réunion3",
                            foundatoinDate = new DateTime(2022, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        },
                        new
                        {
                            Id = new Guid("ea153dd8-ee89-4c98-bb6a-6952deae7bd5"),
                            Name = "Jayden Barajas",
                            coatch = "Madelynn Tapia",
                            country = " Somalia1",
                            foundatoinDate = new DateTime(2029, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            logo = "default.jpg"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "deab2041-3070-4ff9-be07-42ad63798dc4",
                            ConcurrencyStamp = "bec39e37-d4da-4412-a74a-d714409cb8d6",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "1106bddf-f117-4c5d-b1e2-356cd9bdd70a",
                            ConcurrencyStamp = "68fd6261-5437-49b2-b34f-136b30014118",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "a1a6aabf-9f5b-447d-b4ba-377a6fd3843e",
                            RoleId = "1106bddf-f117-4c5d-b1e2-356cd9bdd70a"
                        },
                        new
                        {
                            UserId = "b2e1e05b-e152-4e6b-9fea-a5874e86792d",
                            RoleId = "deab2041-3070-4ff9-be07-42ad63798dc4"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domains.Linker.PlayerTeam", b =>
                {
                    b.HasOne("Domains.Player.Player", null)
                        .WithOne("team")
                        .HasForeignKey("Domains.Linker.PlayerTeam", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domains.Team.Team", null)
                        .WithMany("players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Player.Player", b =>
                {
                    b.Navigation("team")
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Team.Team", b =>
                {
                    b.Navigation("players");
                });
#pragma warning restore 612, 618
        }
    }
}
